{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/view/view.component.ts","./src/app/view/view.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/database.service.ts","./src/app/order/order.component.ts","./src/app/order/order.component.html","./src/app/app-routing.module.ts","./src/app/shared/order.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport {OrderService}  from \"../shared/order.service\";\nimport {OrderComponent} from \"../order/order.component\"\n\n\nimport {openDB} from \"idb/with-async-ittr-cjs\";\nimport {MatTableDataSource}  from \"@angular/material/table\";\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from \"@angular/material/sort\";\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n\n\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n\n})\nexport class HomeComponent implements OnInit {\n\n  isTableExpanded = false;\n\n  listData: MatTableDataSource<any>;\n  displayedColumns: string[] = [\"OrderId\", \"OrderDate\", \"Status\", \"actions\"];\n@ViewChild(MatSort) sort_: MatSort;\n@ViewChild(MatPaginator) paginator: MatPaginator;\nsearchKey: string;\n  page = 0;\n  resultsCount= 10;\n  totalPages = 10;\n\n public data = [];\n\n\n  bulkEdit = false;\n  sortDirection = 0;\n\n\n  sortKey = null;\n\n  constructor(private orderService: OrderService, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.getData();\n\n\n  }\n\n\n\n  // sort // redundat   remove after confirming it does not break anything\n  sortBy(key){\n    this.sortKey = key;\n    this.sortDirection++;\n    this.sort();\n\n  }\n// redundat   remove after confirming it does not break anything\n  sort(){\n   if(this.sortDirection == 1){\n      this.data = this.data.sort((a, b)=>{\n        const valA = a[this.sortKey];\n        const valB = b[this.sortKey];\n\n        return valA.localeCompare(valB);\n      })\n   }\n\n   else if (this.sortDirection == 2){\n    this.data = this.data.sort((a, b)=>{\n      const valA = a[this.sortKey];\n      const valB = b[this.sortKey];\n\n      return valB.localeCompare(valA);\n    })\n   }\n\n   else{\n     this.sortDirection = 0;\n     this.sortKey = null;\n   }\n  }\n// redundat   remove after confirming it does not break anything\n  // form funcs\n  toggleBulkEdit(){\n    console.log(this.data);\n    }\n\n    bulkDelete(){\n\n    };\n\n\n     sharedata(data){\n      this.orderService.setData(data, false);\n    }\n\n// remove row start\n  async removeRow(row){\n\n\n    const db = await openDB(\"OrdersDB\", 1, {\n     upgrade(db) {\n       const store = db.createObjectStore('OrderStoreDB', {\n         keyPath: \"OrderId\",\n       });\n\n     }\n   });\n\nconsole.log(typeof row.OrderId)\n\n\ndb.delete(\"OrderStoreDB\", row.OrderId).then(result => {\n  // needs to change, unecces.. expensive, especially for large docs, splice could work\nthis.getData()\n})\n\n\n\n\n }\n\n\n// get data start\nasync getData(){\n  const db = await openDB(\"OrdersDB\", 1, {\n    upgrade(db) {\n      const store = db.createObjectStore('OrderStoreDB', {\n        keyPath: \"OrderId\",\n\n      });\n\n    }\n  });\n\nconsole.log();\n\n\ndb.getAll(\"OrderStoreDB\").then(result => {\n  console.log(result)\n  this.data = result;\n\n this.listData = new MatTableDataSource(this.data);\n this.listData.sort = this.sort_;\n this.listData.paginator = this.paginator;\n\n\n  console.log(this.data)\n})\n}\n\n// get data end\n\nonSearchClear(){\n  this.searchKey = \"\";\n  this.applyFilter();\n}\n\napplyFilter(){\n  this.listData.filter = this.searchKey.trim().toLowerCase();\n}\n\nonCreate(){\n const dialogueConfig = new MatDialogConfig();\n dialogueConfig.disableClose = false;\n//  dialogueConfig.autoFocus = true;\n dialogueConfig.width = \"80%\";\n\nthis.dialog.open(OrderComponent, dialogueConfig);\nthis.dialog.afterAllClosed.subscribe(result => {\n  this.getData();\n  this.orderService.setData('', false);\n})\n\n\n\n}\n\n\nonEdit(row){\n  this.orderService.setData(row, true);\n  console.log(\"on edit called\", row);\n  this.onCreate();\n\n\n}\n\n\n\nview(row){\n  this.orderService.setData(row, false);\n}\n\n}\n\n","<div class=\"search-div\">\n    <mat-form-field class=\"search-from-field\">\n        <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\n        <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\n       <mat-icon>close</mat-icon>\n     </button>\n    </mat-form-field>\n</div>\n\n\n\n<div class=\"fab-button-container\">\n    <button mat-fab color=\"accent\" aria-label=\"Example icon button with a delete icon\" (click)=\"onCreate()\">\n    <i class=\"material-icons\">add</i>\n  </button>\n</div>\n\n<div class=\"mat-elevation-z8 table-div\">\n\n    <mat-table [dataSource]=\"listData\" matSort multiTemplateDataRows>\n        <ng-container matColumnDef=\"OrderId\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Order Id</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">{{element.OrderId}}</mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"OrderDate\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Order Date</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">{{element.OrderDate}}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"Status\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">{{element.Status}}</mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef></mat-header-cell>\n            <mat-cell *matCellDef=\"let row\">\n                <button mat-icon-button (click)=\"onEdit(row)\"><mat-icon>launch</mat-icon></button>\n                <button mat-icon-button (click)=\"removeRow(row)\"><mat-icon>delete_outlines</mat-icon></button>\n                <button mat-icon-button (click)=\"view(row)\" routerLink=\"/View\"><mat-icon>aspect_ratio</mat-icon></button>\n            </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"loading\">\n            <mat-footer-cell *matFooterCellDef colspan=\"6\">\n                Loading Data...\n            </mat-footer-cell>\n\n        </ng-container>\n\n        <ng-container matColumnDef=\"noData\">\n            <mat-footer-cell *matFooterCellDef colspan=\"6\">\n                No Data.\n            </mat-footer-cell>\n\n        </ng-container>\n\n\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n        <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide': listData!=null}\"></mat-footer-row>\n        <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide': !(listData!=null && listData.data.length==0)}\"></mat-footer-row>\n\n    </mat-table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"5\" showFirstLastButtons></mat-paginator>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { OrderService } from './../shared/order.service';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n  data:any;\n  keys: Array<any> = [];\n  constructor(private shared:  OrderService) { }\n\n  ngOnInit(): void {\n\n    this.shared.getData().then(result => {\n   this.data = result.data;\n\n   console.log(this.data)\n\n   for( let data of this.data.additionalfields){\n     console.log(data)\n     var key = Object.keys(data);\n     console.log(key)\n\n       this.keys.push(key[0]);\n\n\n   }\n\n   console.log(this.keys)\n   console.log(this.keys[0])\n   console.log(this.data.additionalfields.key[0])\n    })\n  }\n\n}\n","<div class=\"Viewcontainer\">\n\n\n    <div class=\"columns\">\n        <div class=\"col1\">\n            <form>\n                <div class=\"container\">\n                    <h1>Basic Info</h1>\n\n                    <hr>\n\n                    <label for=\"OrderId\"><b>Order ID</b></label>\n                    <input type=\"text\" name=\"OrderId\" required [readOnly]='true' value=\"{{data.OrderId}}\">\n\n                    <label for=\"OrderDate\"><b>Order Date</b></label>\n                    <input type=\"text\" name=\"OrderDate\" required [readOnly]='true' value=\"{{data.OrderDate}}\">\n\n\n                    <label for=\"\" Customer><b>Customer</b></label>\n                    <input type=\"text\" name=\"Customer\" required [readOnly]='true' value=\"{{data.Customer}}\">\n\n                    <label for=\"Status\"><b>Status</b></label>\n                    <input type=\"text\" name=\"Status\" required [readOnly]='true' value=\"{{data.Status}}\">\n\n                </div>\n\n\n            </form>\n        </div>\n        <div class=\"col2\">\n            <form>\n                <div class=\"container\">\n                    <h1>Custom Fields</h1>\n                    <hr>\n\n                    <div *ngFor=\"let doc of data?.additionalfields; let i=index\" class=\"controlers-container-outer\">\n\n                        <label for=\"OrderId\"><b>{{keys[i]}}</b></label>\n                        <input type=\"text\" name=\"OrderId\" required [readOnly]='true' value=\"{{doc[keys[i]]}}\">\n\n                    </div>\n\n\n                </div>\n\n\n            </form>\n        </div>\n        <div class=\"col3\">\n            <form>\n                <div class=\"container\">\n                    <h1>Documents</h1>\n                    <hr>\n\n                    <div *ngFor=\"let doc of data?.documents; let i=index\" class=\"controlers-container-outer\">\n\n                        <label for=\"OrderId\"><b>{{doc.name}}</b></label>\n                        <input type=\"text\" name=\"OrderId\" required [readOnly]='true' value=\"{{doc.doc.name}}\">\n\n                    </div>\n\n\n                </div>\n\n\n            </form>\n        </div>\n\n\n\n    </div>\n\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'TestApp';\n}\n","<div class=\"container\">\n    <header>\n\n        <a routerLink='/' class=\"Logo\">TestApp/Home</a>\n\n    </header>\n</div>\n\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatSortModule} from \"@angular/material/sort\";\n\n\n\nimport {FormsModule} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\nimport { OrderComponent } from './order/order.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ViewComponent } from './view/view.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    OrderComponent,\n    ViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n     MatSelectModule,\n     MatCheckboxModule,\n     MatChipsModule,\n     ReactiveFormsModule,\n     FormsModule,\n     MatIconModule,\n     MatDatepickerModule,\n     MatNativeDateModule,\n     MatToolbarModule,\n     MatGridListModule,\n     MatTableModule,\n     MatPaginatorModule,\n     MatSortModule,\n     MatDialogModule,\n     MatCardModule,\n     CommonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [OrderComponent],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { openDB} from 'idb';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  localStorage: Storage;\n  data_: any;\n  success: any;\n\n  constructor() {\n    this.localStorage = window.localStorage;\n   }\n\n\n async sendData(data) {\n\n\n    const db = await openDB(\"OrdersDB\", 1, {\n      upgrade(db) {\n        const store = db.createObjectStore('OrderStoreDB', {\n          keyPath: \"OrderId\",\n\n        });\n\n      }\n    });\n\n\n    db.put(\"OrderStoreDB\",data).then(result =>{\n      return result;\n    })\n\n  //   console.log(data);\n\n\n  //    let request = window.indexedDB.open(\"OrdersDB\", 1),\n  //       db,\n  //       tx,\n  //      store,\n  //      index;\n\n\n  //  request.onupgradeneeded = (e) => {\n  //   let db = request.result,\n  //       store = db.createObjectStore(\"OrderStoreDB\",\n  //       {   keyPath: \"OrderId\",});\n\n\n  //  }\n\n\n\n  //  request.onerror = (error) => {\n  //    console.log(error);\n  //  }\n\n\n  //  request.onsuccess = (e) => {\n  //    console.log(\"success\")\n  //      db = request.result;\n  //      tx = db.transaction(\"OrderStoreDB\", \"readwrite\");\n  //      store = tx.objectStore(\"OrderStoreDB\");\n  //      db.onerror = function(e) {\n  //          console.log(\"ERR\" + e.target.errorCode)\n  //        }\n\n\n  //   let inputData = store.put(data);\n\n\n\n  //   inputData.onsuccess = function() {\n  //      console.log(inputData.result)\n\n\n  //    }\n\n  //    inputData.onerror = function(e) {\n  //      console.log(e)\n  //    }\n\n\n\n  //    tx.oncomplete = function(e) {\n  //      db.close();\n  //      console.log(\"closing\")\n  //    }\n  //  }\n  // }\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormArray, FormBuilder} from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n\nimport {DatabaseService}   from \"../database.service\";\nimport { OrderService } from '../shared/order.service';\nimport {openDB} from \"idb/with-async-ittr-cjs\";\n\n\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.scss']\n})\nexport class OrderComponent implements OnInit {\n\n  orderForm: FormGroup;\n\n\n  // editable labels -> allow header edit\n  OrderId: string  = \"Order ID\";\n  OrderDate: string = \"Order Date\";\n  Customer: string = \"Customer\";\n  Status: string = \"Status\";\n  userDefined: Array<any> = [];\n\n  selectedFile:File;\n  purchaseOrder: File;\n  invoice: File;\n  deliveryNote: File;\n  localStorage: Storage;\n\n  newFields: number = 0;\n  id_: Array<any> = [];\n  fullEditMode:boolean = false;\n\n  onEdit: boolean;\n\n  constructor(private fb: FormBuilder,private db: DatabaseService,\n        private dialogueRef: MatDialogRef<OrderComponent>, private orderService: OrderService) { }\n\n  ngOnInit(): void {\n    let d = new Date();\n\n    if(!window.indexedDB){\n      alert(\"please use a browser that supports indexedDB\");\n    }\n    this.orderForm = this.fb.group({\n      OrderId : 0,\n        OrderDate : d.toDateString(),\n        Customer: '',\n        Status: \"New\",\n        newFieldName: '',\n      entireForm :this.fb.array([])\n    })\n//\nthis.dialogueRef.beforeClosed().subscribe(result =>{\nthis.onEdit = false;\nconsole.log(\"onedit\", this.onEdit)\n})\n\n\n// when the dialogues opens\n    this.dialogueRef.afterOpened().subscribe(result => {\n      this.onEdit = true;\n      console.log(\"onedit\", this.onEdit)\n\n      this.orderService.getData().then((result)=>{\n\n\n\n        if (result.isEdit){\n\n\n// start of if statement\n          if(result.data.additionalfields){\n          for (let additional of result.data.additionalfields){\n            for (var key in additional) {\n              if(additional.hasOwnProperty(key)){\n                console.log(key)\n                const field = this.fb.group({\n                  UserField: key,\n                  UserEntry: additional[key]\n                });\n\n\n                   this.entireForm.push(field);\n                   console.log(result.isEdit);\n              }\n            }\n\n\n      }\n    }\n    // end of if statement\n    this.orderForm.setValue({\n      OrderId : result.data.OrderId,\n        OrderDate :result.data.OrderDate,\n        Customer: result.data.Customer,\n        Status: result.data.Status,\n        newFieldName:  \"\",\n        entireForm: this.entireForm\n\n    })\n\n\n   console.log(\"orderform\",this.entireForm)\n\n        }\n      })\n    })\n  }\n\n\n  get entireForm() {\n    return this.orderForm.get(\"entireForm\") as FormArray;\n }\n// dynamic fields start\n addDynamicFields() {\n  const dynamicField = this.fb.group({\n    UserField: \"\",\n    UserEntry: \"\"\n  })\n\n\n  let id =  this.newFields.toString()\n this.id_.push(id)\n\n  this.entireForm.push(dynamicField);\n\n  this.newFields++;\n}\n\n// countfields start\ncountFields(){\n\n\n\n  for(let form of this.entireForm.controls){\n    console.log(form.value)\n\n  }\n\n}\n\n// edit starts  redundat   remove after confirming it does not break anything\nfullEdit(){\n  this.fullEditMode = true;\n  this.orderForm.setValue({\n    OrderId : this.OrderId,\n      OrderDate : this.OrderDate,\n      Customer: this.Customer,\n      Status: this.Status,\n      newFieldName:  \"\",\n      entireForm: this.entireForm\n\n  })\n}\n// redundat   remove after confirming it does not break anything\nconfirmEdit(){\n   this.fullEditMode = false;\n\n const vals = this.orderForm.value;\n this.OrderId = vals.OrderId;\n this.OrderDate = vals.OrderDate;\n this.Customer = vals.Customer;\n this.Status = vals.Status;\n\n this.orderForm.setValue({\n  OrderId : 0,\n    OrderDate : Date.now(),\n    Customer: \"\",\n    Status: \"\",\n    newFieldName:  \"\",\n    entireForm: this.entireForm\n\n})\n\n}\n\n\n\n// data entry to db, use service\nsaveOrder(){\n\n  const formData = this.orderForm.value\n  let data = {\n    OrderId:  formData.OrderId,\n    OrderDate: formData.OrderDate,\n    Customer: formData.Customer,\n    Status: formData.Status,\n    documents: [],\n    additionalfields: []\n\n\n  }\n\n\n  // get documents\n  if(this.invoice){\n    data.documents.push({name: \"invoice\", doc: this.invoice})\n  }\n\n  if(this.purchaseOrder){\n    data.documents.push({name: \"Purchase Order\", doc: this.purchaseOrder})\n  }\n\n\n  if(this.deliveryNote){\n    data.documents.push({name: \"Delivery Note\", doc: this.deliveryNote})\n  }\n\n\n  // add dynaic fields\n  for(let form of this.entireForm.controls){\n    console.log(form.value)\n    let add = {}\n    add[form.value.UserField] = form.value.UserEntry;\n\n    data.additionalfields.push(add)\n\n  }\n    // save\n\n      console.log(\"not edit mode\")\n      this.db.sendData(data).then(result =>{\n        this.dialogueRef.close();\n       });\n\n// forseen: if the user changes order id, a new document is created, since it is indexedDB\n// handle in the future\n\n\n\n\n\n   }\n\n\n\n\n// files change event\n   onFileChangedDeliveryNote(event){\n    this.deliveryNote = event.target.files[0];\n   }\n\n\n\n   onFileChangedPurchaseOrder(event){\n    this.purchaseOrder = event.target.files[0];\n  }\n\n  onFileChangedInvoice(event){\n    this.invoice = event.target.files[0];\n  }\n\n  deleteField(index){\n    this.entireForm.removeAt(index)\n    console.log(index);\n    console.log(this.userDefined[index])\n  }\n\n}\n","<!-- <button (click)=\"fullEdit()\" [hidden]=\"fullEditMode\">Full Edit Mode</button>\n\n\n<button (click)=\"confirmEdit()\" [hidden]=\"!fullEditMode\">ConfirmEdit</button> -->\n\n\n\n\n<form [formGroup]=\"orderForm\" class=\"normal-form\">\n\n\n    <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n        <mat-grid-tile>\n            <div class=\"controlers-container\">\n                <!--  -->\n                <mat-form-field>\n                    <input matInput placeholder={{OrderId}} formControlName=\"OrderId\">\n\n                </mat-form-field>\n                <!--  -->\n                <mat-form-field>\n                    <mat-label>Choose a date</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"OrderDate\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field>\n                <!--  -->\n                <mat-form-field>\n                    <input matInput placeholder={{Customer}} formControlName=\"Customer\">\n\n                </mat-form-field>\n\n                <!--  -->\n\n\n                <mat-form-field>\n                    <mat-label>Status</mat-label>\n                    <select matNativeControl required formControlName=\"Status\">\n                    <option value=\"New\">New</option>\n                    <option value=\"Order Placed\">Order Placed</option>\n                    <option value=\"Delivered\">Delivered</option>\n                    <option value=\"Closes\">Closes</option>\n                  </select>\n                </mat-form-field>\n                <!--  -->\n            </div>\n        </mat-grid-tile>\n\n\n        <mat-grid-tile>\n            <div class=\"controlers-container\">\n                <div class=\"add-bottom-padding\">\n                    <div>\n                        <mat-label>Purchase Order</mat-label>\n                        <input type=\"file\" (change)=\"onFileChangedPurchaseOrder($event)\" />\n                    </div>\n\n                    <div>\n                        <mat-label>invoice</mat-label>\n\n                        <input type=\"file\" (change)=\"onFileChangedInvoice($event)\" />\n                    </div>\n                    <div>\n                        <mat-label>Delivery Note</mat-label>\n\n                        <input type=\"file\" (change)=\"onFileChangedDeliveryNote($event)\" />\n                    </div>\n\n\n                    <div>\n                        <button mat-raised-button (click)=\"saveOrder()\" [hidden]=\"fullEditMode\">Save Order</button>\n                    </div>\n                </div>\n\n            </div>\n\n        </mat-grid-tile>\n    </mat-grid-list>\n\n\n\n\n\n    <br>\n    <div formArrayName=\"entireForm\">\n        <div *ngFor=\"let form of entireForm.controls; let i=index\" [formGroupName]=\"i\" class=\"controlers-container-outer\">\n            <div class=\"dynamicField\">\n\n                <input matInput placeholder=\"label or header for this field\" formControlName=\"UserField\">\n                <input matInput placeholder=\"data\" formControlName=\"UserEntry\">\n                <button mat-raised-button color=\"warn\" (click)=\"deleteField(i)\">delete</button>\n\n            </div>\n        </div>\n\n    </div>\n    <br>\n    <div class=\"addNewField\">\n\n        <button (click)=\"addDynamicFields()\">\n          add new field\n        </button>\n\n    </div>\n\n\n\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport {HomeComponent} from './home/home.component';\nimport {OrderComponent} from './order/order.component';\nimport {ViewComponent} from \"./view/view.component\";\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'OrderForm', component: OrderComponent},\n  {path: 'View', component: ViewComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  data: any;\n  isEdit: boolean = false;\n  constructor() { }\n\n\n async setData(data: any, isEdit:boolean) {\n    this.data = data;\n    this.isEdit = isEdit;\n  }\n\n  async getData(){\n    let obj = {data: this.data, isEdit: this.isEdit};\n    return obj;\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}